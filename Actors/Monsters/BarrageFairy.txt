Class FB_BarrageFairy : FB_FairyBase
{
  static const statelabel posStates[] =
  {
  	"RegularBarrage",
  	"SuperBurst",
  	"DestructibleBullets",
  	"WeaverBullets",
  	"RedLaser"
  };
  
  
  Default
  {
    Health 200;
    Radius 20;
    Height 35;
    Mass 50;
    MeleeRange 100;
	MeleeThreshold 180;
    Speed 3;
    Scale 1.35;
	Painchance 128;
    SeeSound "";
    DeathSound "";
    AttackSound "";
	PainSound "FB/GreatFairyPain";
    Tag "Barrage Fairy";
    Monster;
    +DONTHARMCLASS
    +NOGRAVITY
    +FLOAT
    +FLOATBOB
    +DONTFALL
    +NOICEDEATH
	+AVOIDMELEE
	FloatBobStrength 0.5;
	Obituary "%o was riddled with curtain fire by a Barrage Fairy.";
  }

  override void start() {
	//Push some possible sprites
	possSprite.push("FB_1");
	possSprite.push("FB_2");
	possSprite.push("FB_3");
	//TODO: Dynamic Array support for possible attacks
	attack = posStates[random(0,4)];
	super.start();
  }

  //TODO: Have this be chosen in start() method 
  private state BarrageFairyChoose()
  {
   return ResolveState(attack);
  }

  States
  {
  Spawn:
	FA_1 A 0 NoDelay;
	"####" A 0 A_SetHealth(random(100,150));
	"####" A 0 A_SetSpeed(random(1,4));
  Spawn1:
    "####" AB 5 A_Look();
    Loop;
  See:
	"####" A 0 ThrustThingZ(0,random(0,8),0,1);
	"####" ABABABAB random(1,5);
	"####" A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
	Goto WanderAttack;
  See1:
    "####" AABB 1 A_Chase();
    Loop;
  WanderAttack:
	"####" AABBAABBAABBAABBAABB 1
	{
		A_Chase("Missile","Missile",CHF_DONTMOVE);
		A_Wander();
		A_FaceTarget();
	}
	"####" A 0 A_CheckSight("See1");
	Loop;
  Realign:
	"####" AABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABB 1 A_Wander();
	Goto See1;
  CoolDown:
    "####" A 0;
	"####" AABBAABBAABB 1 A_Wander();
	Goto WanderAttack;
  Missile:
	"####" A 0 A_Jump(40,"StandoffStart");
	"####" A 0 A_CheckLOF("MissileProceed");
    Goto Realign;
  MissileProceed:
    "####" A 0 BarrageFairyChoose();
	Goto RegularBarrage;
  RegularBarrage:
    "####" A 0;
    "####" A 0 A_StartSound("FB/BarrageFairyReady",13);
	"####" ABABABABABABABABABABABABABAB 1
		{
		A_FaceTarget(0.75,3);
		A_SpawnParticleEx
		(
		"",
		tex[1],
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(2,8),
		size: random(40,120),
		xoff: 10,
		zoff: 10,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
		}
	"####" A 0 A_StopSound(13);
  BulletsFire:
    "####" A 0;
	"####" AB 7
	{
	if(random(1,12) == 1)
	A_ChangeVelocity(random(-2,2),random(-2,2),random(-2,2),CVF_RELATIVE|CVF_REPLACE);
	A_StartSound("FB/Barrage",12,CHANF_OVERLAP);
	A_SpawnProjectile("FB_FairyBlueBarrage1",10,0,frandom(-3,3),CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch+frandom(-2,2));
	}
	"####" A 0 A_FaceTarget(0.70,3);
	"####" A 0 A_MonsterRefire(78,"See1");
	Loop;
  SuperBurst:
    "####" A 0;
	"####" A 0 A_StartSound("FB/BarrageFairyReady",13,pitch:1.25);
    "####" A 0 { attackloop = random(12,20); }
	"####" ABABABABABABABABABABABABABABABABABABABA 1
		{
		A_FaceTarget(2,2);
		A_SpawnParticleEx
		(
		"",
		tex[1],
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(2,8),
		size: random(40,120),
		xoff: 10,
		zoff: 10,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
		for(int i=random(1,3);i>0;i--)
		A_SpawnParticleEx
		(
		"3d85c6",
		TexMan.CheckForTexture("Graphics/Particles/fbparticlesquare.png"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(10,85),
		size: frandom(3,23),
		xoff: frandom(2,4),
		yoff: frandom(-13,13),
		zoff: frandom(0,29),
		velx: frandom(1,6),
		startalphaf: frandom(0.45,0.55),
		fadestepf: -0.5,
		sizestep: -2,
		startroll: random(-180,180)
		);
		}
	"####" A 0 A_StopSound(13);
  SuperBurstGo:
   "####" AB 2
   {
    if(attackloop <= 0)
	SetStateLabel("SuperBurstEnd");
	A_StartSound("FB/Barrage",12,CHANF_OVERLAP);
	A_SpawnProjectile("FB_FairyBlueBarrage2",10,0,frandom(-3,3),CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch+frandom(-2,2));
	attackloop--;
   }
   "####" A 0 A_FaceTarget(0.65,3);
   Loop;
  SuperBurstEnd:
   "####" A 2 A_FaceTarget(0.65,3);
   Goto Cooldown;
  DestructibleBullets:
    "####" A 0;
    "####" A 0 A_StartSound("FB/BarrageFairyReady",13);
	"####" ABABABABABABABABABABABABABAB 1
		{
		A_FaceTarget(0.75,3);
		A_SpawnParticleEx
		(
		"",
		tex[1],
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(2,8),
		size: random(40,120),
		xoff: 10,
		zoff: 10,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
		}
	"####" A 0 A_StopSound(13);
  DBulletsFire:
    "####" A 0;
	"####" AB 4
	{
	if(random(1,16) == 1)
	A_ChangeVelocity(random(-2,2),random(-2,2),random(-2,2),CVF_RELATIVE|CVF_REPLACE);
	A_SpawnProjectile("FB_FairyBallDestruct1",10,0,frandom(-3,3),CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch+frandom(-2,2));
	}
	"####" A 0 A_FaceTarget(0.70,3);
	"####" A 0 A_MonsterRefire(78,"See1");
	Loop;
  WeaverBullets:
    "####" A 0;
    "####" A 0 A_StartSound("FB/BarrageFairyReady",13);
	"####" ABABABABABABABABABABABABABAB 1
		{
		A_FaceTarget(0.75,3);
		A_SpawnParticleEx
		(
		"",
		tex[1],
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(2,8),
		size: random(40,120),
		xoff: 10,
		zoff: 10,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
		}
	"####" A 0 A_StopSound(13);
  WBulletsFire:
    "####" A 0;
	"####" AB 6
	{
	if(random(1,13) == 1)
	A_ChangeVelocity(random(-2,2),random(-2,2),random(-2,2),CVF_RELATIVE|CVF_REPLACE);
	A_SpawnProjectile("FB_FairyBallWeaver1",10,0,frandom(-3,3),CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch+frandom(-2,2));
	}
	"####" A 0 A_FaceTarget(0.70,3);
	"####" A 0 A_MonsterRefire(78,"See1");
	Loop;
  RedLaser:
    "####" A 0;
	"####" A 0 { attackloop = random(45,65); }
    "####" A 0 A_StartSound("FB/BarrageFairyReady",13,pitch:0.85);
	"####" ABABABABABABABABABABABABABABABABABABA 1
		{
		A_FaceTarget(15,15);
		A_SpawnParticleEx
		(
		"",
		tex[4],
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(2,8),
		size: random(40,120),
		xoff: 10,
		zoff: 10,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
		}
	"####" A 0 { bNOPAIN = true; }
	"####" ABABABABABAB 2
	{
	 A_SpawnParticleEx
	 (
	 "",
	 tex[4],
	 style: STYLE_Add,
	 flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
	 lifetime: random(2,8),
	 size: random(70,160),
	 xoff: 10,
	 zoff: 10,
	 startalphaf: 0.85,
	 fadestepf: -1,
	 sizestep: -15,
	 startroll: random(-180,180)
	 );
	}
	"####" A 0 A_StartSound("FB/LaserStart",14,volume:0.75);
	"####" ABABABA 2
	{
	 A_SpawnParticleEx
	 (
	 "",
	 tex[4],
	 style: STYLE_Add,
	 flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
	 lifetime: random(2,8),
	 size: random(70,160),
	 xoff: 10,
	 zoff: 10,
	 startalphaf: 0.85,
	 fadestepf: -1,
	 sizestep: -15,
	 startroll: random(-180,180)
	 );
	}
	"####" A 0 	A_StartSound("FB/LaserLoop",CHAN_6,CHANF_LOOPING,volume:0.75);
  "####" A 0 A_Jump(98,"RedLaserLeft","RedLaserRight"); //[NERU] i have to confess. i do not know which is which
    Goto RedLaserGo;
  RedLaserLeft:
   "####" A 0;
   "####" A 0 { projangle = random(-30,-35); }
  RedLaserLeftGo:
   "####" AB 1
   {
    if(projangle > random(35,45))
	SetStateLabel("RedLaserEnd");
	A_SpawnProjectile("FB_FairySmallRedLaser",10,0,projangle,CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch);
	projangle++;
   }
   "####" A 0;
   Loop;
  RedLaserRight:
   "####" A 0;
   "####" A 0 { projangle = random(30,35); }
  RedLaserRightGo:
   "####" AB 1
   {
    if(projangle < random(-35,-45))
	SetStateLabel("RedLaserEnd");
	A_SpawnProjectile("FB_FairySmallRedLaser",10,0,projangle,CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch);
	projangle--;
   }
   "####" A 0;
   Loop;
  RedLaserGo:
   "####" AB 2
   {
    if(attackloop <= 0)
	SetStateLabel("RedLaserEnd");
	A_SpawnProjectile("FB_FairySmallRedLaser",10,0,0,CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch);
	attackloop--;
   }
   "####" A 0; //A_FaceTarget(0.25,3);
   Loop;
  RedLaserEnd:
   "####" A 0;
   "####" A 0 A_Stop;
   "####" A 0 { bNOPAIN = false; }
   "####" A 0 A_StopSound(6);
   "####" A 2;
   Goto Cooldown;
  Pain:
	"####" A 1 A_StopSound(6);
	"####" A 1 A_Pain();
	"####" A 4; 
	Goto WanderAttack;
  Death:
  "####" A 0;
	"####" A 0 A_StopSound(6);
	"####" A 0 { deathtimer = random(2,5); }
	"####" A 1 A_Scream();
	"####" A 1 A_NoBlocking();
	"####" A 0 A_Jump(76,"DeathEnd");
	"####" A 0 A_Jump(80,"Death2");
	Goto DeathFade;
  Death2:
    "####" A 0
	{
  A_SpawnItemEx("FB_FairyFall",xvel:random(-3,3),yvel:random(-3,3),zvel:frandom(1.0,5.0),flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_NOCHECKPOSITION|SXF_CLIENTSIDE,failchance:0);
	for(int i=3;i>0;i--)
	A_SpawnItemEx("FB_WhiteFairyExplode2",random(-20,20),random(-20,20),random(-20,20),frandom(-1.5,1.5),frandom(-1.5,1.5),frandom(-1.5,1.5),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE,0);
	A_StartSound("FB/DeathSFXMediumRefleX",15);
	}
	Stop;
  DeathFade:
	"####" A 3 
	{
	if(deathtimer < 0)
	SetStateLabel("DeathEnd");
	A_SpawnItemEx("FB_WhiteFairyExplode2",random(-20,20),random(-20,20),random(-20,20),frandom(-0.5,0.5),frandom(-0.5,0.5),frandom(-0.5,0.5),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE,0);
	A_StartSound("FB/DeathSFXSmall",15);
	deathtimer--;
	}
	Loop;
  DeathEnd:
  "####" AAAAA 2
  {
   A_SpawnItemEx("FB_WhiteFairyExplode2",random(-20,20),random(-20,20),random(-20,20),frandom(-0.5,0.5),frandom(-0.5,0.5),frandom(-0.5,0.5),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE,0);
   A_StartSound("FB/DeathSFXSmall",15);
  }
  TNT1 A 0
	{
	 if(fb_itemdrops)
	 {
	  for(int i=random(0,3);i>0;i--)
	  A_SpawnItemEx("FB_GiftOrb",flags:SXF_NOCHECKPOSITION);
	 }
	 else
	 A_Jump(256,1);
	}
	TNT1 A 0
		{
		A_SpawnParticleEx
			(   
			"",
			TexMan.CheckForTexture("SPKWE0"),
			style: STYLE_Add,
			flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
			lifetime: random(200,300),
			size: 20,
			zoff: 5,
			accelx: frandom(-0.05,0.05),
			accely: frandom(-0.05,0.05),
			accelz: frandom(-0.05,0.2),
			startalphaf: frandom(0.8,1),
			fadestepf: 0,
			sizestep: -0.01,
			startroll: random(-180,180)
			);
		for(int i=random(5,8);i>0;i--)
		A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("GNSMK0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(40,85),
			size: frandom(8,25),
			velx: frandom(-1,1),
			vely: frandom(-1,1),
			velz: frandom(-1,1),
			startalphaf: frandom(0.6,0.95),
			fadestepf: -1,
			sizestep: frandom(0.2,4),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
		for(int i=random(7,12);i>0;i--)
		A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("DUS_C0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(40,80),
			size: frandom(8,20),
			velx: frandom(-4,4),
			vely: frandom(-4,4),
			velz: frandom(-4,8),
			accelz: frandom(-0.1,-0.6),
			startalphaf: 1.0,
			sizestep: -0.15,
			startroll: random(-180,180),
			rollvel: random(0,4)
			);
        A_StartSound("FB/DeathSFXMediumRefleX",14);
		A_SpawnParticleEx
		(
			"",
			TexMan.CheckForTexture("SPKWC0"),
			style: STYLE_Add,
			flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
			lifetime: 15,
			size: 550,
			angle: 0,
			xoff: 0,
			yoff: 0,
			zoff: 0,
			startalphaf: 1,
			fadestepf: -1,
			sizestep: -15,
			startroll: random(-180,180)
			);
		for(int i=random(12,15);i>0;i--)
		A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("Graphics/Particles/fbparticlesquare.png"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(20,60),
			size: frandom(3,12),
			velx: frandom(-8,8),
			vely: frandom(-8,8),
			velz: frandom(-8,10),
			accelz: frandom(-0.0,-0.8),
			startalphaf: 1.0,
			fadestepf: -0.5,
			sizestep: -0.2,
			startroll: random(-180,180)
			);
		}
    Stop;
  }
}